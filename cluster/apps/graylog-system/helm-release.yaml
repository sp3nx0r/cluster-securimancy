---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: graylog
  namespace: graylog-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.kong-z.com/
      chart: graylog
      version: 1.9.2
      sourceRef:
        kind: HelmRepository
        name: graylog-charts
        namespace: flux-system
      interval: 5m
  values:
    tags:
      # If true, this chart will install Elasticsearch from requirement dependencies
      install-elasticsearch: true
      # If true, this chart will install MongoDB replicaset from requirement dependencies
      install-mongodb: true

    graylog:
      ## Graylog image version
      ## Important note: Official Graylog Docker image may replace the existing Docker image tags and cause some corrupt when starting the pod.
      ## Make sure you strict with the `x` version of Graylog where `x` is ${version}-${x}
      image:
        repository: "harbor.${SECRET_DOMAIN}/dockerhub/graylog/graylog"
        tag: "4.2.4-1"
        pullPolicy: "IfNotPresent"

      ## Graylog default Java option
      javaOpts: "-Dlog4j2.formatMsgNoLookups=true -Djdk.tls.acknowledgeCloseNotify=true -XX:+UnlockExperimentalVMOptions -XX:NewRatio=1 -XX:MaxMetaspaceSize=256m -server -XX:+ResizeTLAB -XX:-OmitStackTraceInFastThrow"

      ## Number of Graylog instance
      replicas: 1

      ## Additional environment variables to be added to Graylog pods
      env: {}

      affinity: {}

      tolerations: []

      nodeSelector: {}

      ## Set security context for defining privilege and accessing control settings entire Pod
      podSecurityContext: {}
        # runAsUser: 10001
        # fsGroup: 65534

      ## Set security context for defining privilege and accessing control settings for Graylog container
      securityContext:
        privileged: false
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

      persistence:
        enabled: true
        accessMode: ReadWriteOnce
        size: "20Gi"
        storageClassName: "nfs-client"

      ## Additional plugins you need to install on Graylog.
      plugins:
        locations:
        - name: graylog-plugin-slack-notification-4.1.1.jar
          url: https://github.com/KongZ/graylog-plugin-slack-notification/releases/download/v4.1.1/graylog-plugin-slack-notification-4.1.1.jar
        - name: graylog-plugin-function-check-diff-1.0.1.jar
          url: https://github.com/KongZ/graylog-plugin-function-check-diff/releases/download/v1.0.1/graylog-plugin-function-check-diff-1.0.1.jar
        - name: graylog-plugin-google-cloud-pubsub-1.0.4.jar
          url: https://github.com/KongZ/graylog-plugin-google-cloud-pubsub/releases/download/v1.0.4/graylog-plugin-google-cloud-pubsub-1.0.4.jar
        - name: graylog-plugin-auth-sso-3.3.0.jar
          url: https://github.com/Graylog2/graylog-plugin-auth-sso/releases/download/3.3.0/graylog-plugin-auth-sso-3.3.0.jar

      ## Additional input ports for receiving logs from servers
      ## Note: Name must be in IANA_SVC_NAME (at most 15 characters, matching regex [a-z0-9]([a-z0-9-]*[a-z0-9])* and it must contains at least one letter [a-z], hyphens cannot be adjacent to other hyphens)
      ## Note: Array must be sorted by port order
      ##
      input: {}
        # tcp:
        #   service:
        #     name: your-tcp-service-name
        #     type: LoadBalancer
        #     loadBalancerIP:
        #   ports:
        #     - name: gelf
        #       port: 12222
        # udp:
        #   service:
        #     name: your-udp-service-name
        #     type: ClusterIP
        #   ports:
        #     - name: syslog
        #       port: 12222

      ## External URL to access Graylog at
      externalUri: "graylog.${SECRET_DOMAIN}"

      ## External URL is https ?
      externalUriTLS: true

      ingress:
        enabled: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "weather-sunset"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918@kubernetescrd"
        ingressClassName: "traefik"
        hosts:
         - "graylog.${SECRET_DOMAIN}}"
        tls:
          - hosts:
              - "graylog.${SECRET_DOMAIN}"

      resources:
        limits:
          cpu: "1"
        requests:
          cpu: "500m"
          memory: "1024Mi"

      ## Set Graylog Java heapsize. If this value empty, chart will allocate heapsize using `-XX:+UseCGroupMemoryLimitForHeap`
      ## ref: https://blogs.oracle.com/java-platform-group/java-se-support-for-docker-cpu-and-memory-limits
      ##
      # heapSize: "1024g"

      metrics:
        enabled: true

      geoip:
        enabled: false
        mmdbUri: "${MAXMIND_URI}"

      rootTimezone: "UTC"
      existingRootSecret: "graylog-admin-secret"

      elasticsearch:
        ## Major version of the Elasticsearch version used.
        ## It is required by Graylog 4. See https://docs.graylog.org/en/4.0/pages/configuration/elasticsearch.html#available-elasticsearch-configuration-tunables
        version: "6"
        ## List of Elasticsearch hosts Graylog should connect to.
        ## Need to be specified as a comma-separated list of valid URIs for the http ports of your elasticsearch nodes.
        ## If one or more of your elasticsearch hosts require authentication, include the credentials in each node URI that
        ## requires authentication.
        ##
        # hosts: http://elasticsearch-client.graylog.svc.cluster.local:9200
        hosts: ""
        # Allow elasticsearch hosts to be fetched from a k8s secret
        # {{ graylog.fullname }}-es will be used as uriSecretName if left empty
        uriSecretName: ""
        uriSecretKey: ""
        uriSSL: false

      mongodb:
        ## MongoDB connection string
        ## See https://docs.mongodb.com/manual/reference/connection-string/ for details
        # uri: mongodb://user:pass@host1:27017,host2:27017,host3:27017/graylog?replicaSet=rs01
        uri: ""
        # Allow mongodb uri to be fetched from a k8s secret
        # {{ graylog.fullname }}-headless will be used as uriSecretName if left empty
        uriSecretName: ""
        uriSecretKey: ""

        ## Increase this value according to the maximum connections your MongoDB server can handle from a single client
        ## if you encounter MongoDB connection problems.
        ##
        maxConnections: 1000

      transportEmail:
        enabled: true
        hostname: "smtp.sendgrid.net"
        port: 2587
        useAuth: true
        useTls: true
        useSsl: false
        authUsername: "apikey"
        authPassword: ${SMTP_SENDGRID_PASSWORD}
        subjectPrefix: "[graylog]"
        fromEmail: "graylog@${SECRET_DOMAIN}"

      ## Additional graylog config which is defined on `graylog.conf`.
      ## You can find a complete list of graylog config from http://docs.graylog.org/en/3.0/pages/configuration/server.conf.html
      ## Graylog config is written in Java properites format. Make sure you write it correctly.
      ##
      # config: |
      #   elasticsearch_connect_timeout = 10s
      #   elasticsearch_socket_timeout = 60s
      #   elasticsearch_idle_timeout = -1s

      journal:
        ## Sometime Graylog journal continually grow up or corrupt and cause Graylog unable to start.
        ## You need to clean up all journal files in order to run the Graylog.
        ## Change `graylog.journal.deleteBeforeStart` to `true` to delete all journal files before start
        ## Note: All uncommitted logs will be permanently DELETED when this value is true
        ##
        deleteBeforeStart: false

        ## Maximum size of the graylog journal.
        maxSize: 5gb

      init:
        image:
          repository: "harbor.${SECRET_DOMAIN}/dockerhub/library/alpine"
          pullPolicy: "IfNotPresent"

      ## Additional server files will be deployed to /etc/graylog/server
      ## For example, you can put server certificates or authorized clients certificates here
      ##
      serverFiles: {}
        # server.key: |
        # server.cert: |

      ## Configure whether Graylog pods should log in JSON (one event per line)
      logInJson: true

      ## Specify a Bash script to run as Kubernetes Job (running on Alpine with curl and bash packages already installed).
      ## Useful for calling the API to pre-configure some aspect of Graylog, as in the example.
      ##
      provisioner:
        enabled: false
        annotations: {}
        useGraylogServiceAccount: false
        # script: |
        #  json='{
        #    "username_header": "X-Auth-Request-User",
        #    "fullname_header": "X-Auth-Request-User",
        #    "email_header": "X-Auth-Request-Email",
        #    "default_group": "Admin",
        #    "auto_create_user": true,
        #    "require_trusted_proxies": true,
        #    "trusted_proxies": "0.0.0.0/0",
        #    "default_email_domain": "mydomain.com",
        #    "sync_roles": false,
        #    "roles_header": "Roles"
        #  }'
        #  curl -v -u "admin:$GRAYLOG_PASSWORD_SECRET" -X PUT --header 'Content-Type: application/json' --header 'X-Requested-By: localhost' --data-binary "${json}" http://graylog-master:9000/api/plugins/org.graylog.plugins.auth.sso/config

        ## Additional environment variables to be added to Graylog provisioner job
        ##
        env: {}

        ## Additional environment variables in raw yaml format
        ## - name: POD_IP
        ##   valueFrom:
        ##     fieldRef:
        ##       fieldPath: status.podIP
        ## - name: SERVICE_8000_NAME
        ##   value: servicename
        envRaw: {}

      secret:
        ## Secret annotations
        ##
        annotations: {}

      options:
        ## Using search result highlighting will result in slightly higher resource consumption of searches.
        allowHighlighting: true

        ## Do you want to allow searches with leading wildcards?
        ## This can be extremely resource hungry and should only be enabled with care.
        allowLeadingWildcardSearches: false

    ## Specify Elasticsearch version from requirement dependencies. Ignore this seection if you install Elasticsearch manually.
    ## Note: Graylog 2.4 requires Elasticsearch version <= 5.6
    elasticsearch:
      image:
        repository: "docker.elastic.co/elasticsearch/elasticsearch-oss"
        tag: "6.8.22"
      client:
        replicas: 1
      master:
        replicas: 1
      data:
        replicas: 1
      cluster:
        env:
          MINIMUM_MASTER_NODES: "1"
        xpackEnable: false

    # Specify Mongodb settings. Ignore this section if you install MongoDB manually.
    mongodb:
      architecture: "replicaset"
      useStatefulSet: true
      replicaCount: 1
      auth:
        enabled: false
