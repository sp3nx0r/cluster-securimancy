---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: tools
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io/
      chart: authentik
      version: 4.0.3
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2021.10.4
      pullPolicy: IfNotPresent

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        # external-dns/is-public: "true"
        # external-dns.alpha.kubernetes.io/target: ingress.${SECRET_DOMAIN}
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      hosts:
        - host: authentik.${SECRET_DOMAIN}
          paths:
            - path: /
      tls:
        - hosts:
          - authentik.${SECRET_DOMAIN}

    authentik:
      # secret_key: set by valuesFrom
      log_level: debug
      error_reporting:
        enabled: false

      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

      # email:
      #   # host: set by valuesFrom
      #   port: 587
      #   # username: set by valuesFrom
      #   # password: set by valuesFrom
      #   use_tls: true
      #   use_ssl: false
      #   from: "Authentik <authentik@mg.${INGRESS_DOMAIN}>"

      postgresql:
        host: "{{ .Release.Name }}-postgresql"
        name: authentik
        user: authentik
        # password: set by valuesFrom
      redis:
        host: "{{ .Release.Name }}-redis-master"
        # password: set by valuesFrom

    # resources:
    #   server:
    #     requests:
    #       memory: 384Mi
    #     limits:
    #       memory: 512Mi
    #   worker:
    #     requests:
    #       memory: 384Mi
    #     limits:
    #       memory: 512Mi

    postgresql:
      enabled: true
      persistence:
        enabled: true
        existingClaim: authentik-postgresql

      postgresqlUsername: authentik
      postgresqlDatabase: authentik
      # postgresqlPassword: set by valuesFrom

      primary:
      # resources:
      #   requests:
      #     memory: 256Mi
      #   limits:
      #     memory: 512Mi

    redis:
      enabled: true
      auth:
        enabled: true
        # password: set by valuesFrom

      # master:
      #   resources:
      #     requests:
      #       memory: 32Mi
      #     limits:
      #       memory: 64Mi

  valuesFrom:
    - kind: Secret
      name: authentik
      valuesKey: authentik_secret_key
      targetPath: authentik.secret_key
      optional: false
    - kind: Secret
      name: authentik
      valuesKey: redis_password
      targetPath: authentik.redis.password
      optional: false
    - kind: Secret
      name: authentik
      valuesKey: postgresql_password
      targetPath: authentik.postgresql.password
      optional: false
    - kind: Secret
      name: authentik
      valuesKey: smtp_host
      targetPath: authentik.email.host
      optional: false
    - kind: Secret
      name: authentik
      valuesKey: smtp_user
      targetPath: authentik.email.username
      optional: false
    - kind: Secret
      name: authentik
      valuesKey: smtp_password
      targetPath: authentik.email.password
      optional: false
    - kind: Secret
      name: authentik
      valuesKey: postgresql_password
      targetPath: postgresql.postgresqlPassword
      optional: false
    - kind: Secret
      name: authentik
      valuesKey: redis_password
      targetPath: redis.auth.password
      optional: false
