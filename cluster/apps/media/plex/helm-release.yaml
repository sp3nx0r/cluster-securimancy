---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      chart: plex
      version: 6.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/k8s-at-home/plex
      tag: v1.25.4.5468-989df2310
    env:
      TZ: America/Chicago
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${SVC_PLEX_ADDR}
        externalTrafficPolicy: Cluster
        annotations:
          traefik.ingress.kubernetes.io/service.serversscheme: https
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          external-dns/is-public: 'true'
          hajimari.io/enable: 'true'
          hajimari.io/icon: plex
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-authentik@kubernetescrd
        hosts:
          - host: plex.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - plex.${SECRET_DOMAIN}
            secretName: plex-tls
    persistence:
      config:
        enabled: true
        existingClaim: plex-config-v1
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /storage/share/plex-data/
        mountPath: /data
        readOnly: false
      transcode:
        enabled: true
        type: emptyDir
        medium: Memory
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-intel-gpu
                  operator: In
                  values:
                    - 'true'
    podAnnotations:
      # backup.velero.io/backup-volumes: config
      # pre.hook.backup.velero.io/container: fsfreeze
      # pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      # post.hook.backup.velero.io/container: fsfreeze
      # post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
      configmap.reloader.stakater.com/reload: plex-promtail
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 1000m
        memory: 1000Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 4000Mi
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
    # addons:
    #   promtail:
    #     enabled: true
    #     image:
    #       repository: ghcr.io/k8s-at-home/promtail
    #       tag: 2.3.0
    #     loki: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push
    #     logs:
    #       - name: promtail/plex
    #         path: "/config/Library/Application Support/Plex Media Server/Logs/*.log"
    #       - name: promtail/plex/plugins
    #         path: "/config/Library/Application Support/Plex Media Server/Logs/PMS Plugin Logs/*.log"
    #     volumeMounts:
    #       - name: config
    #         mountPath: /config
    #         readOnly: true
    #     securityContext:
    #       runAsUser: 0
    # additionalContainers:
    #   fsfreeze:
    #     name: fsfreeze
    #     image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
    #     volumeMounts:
    #       - name: config
    #         mountPath: /config
    #     securityContext:
    #       privileged: true
