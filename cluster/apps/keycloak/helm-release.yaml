---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: keycloak
  namespace: keycloak-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: keycloak
      version: 5.2.3
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
      interval: 5m
  values:
    global:
      imageRegistry: "harbor.{SECRET_DOMAIN}/dockerhub"
      imagePullSecrets: []
      storageClass: "nfs-client-fast"

    ## @section Keycloak parameters

    ## Bitnami Keycloak image version
    ## ref: https://hub.docker.com/r/bitnami/keycloak/tags/
    ## @param image.registry Keycloak image registry
    ## @param image.repository Keycloak image repository
    ## @param image.tag Keycloak image tag (immutable tags are recommended)
    ## @param image.pullPolicy Keycloak image pull policy
    ## @param image.pullSecrets Specify docker-registry secret names as an array
    ## @param image.debug Specify if debug logs should be enabled
    ##
    image:
      pullPolicy: Always
    ## Keycloak authentication parameters
    ## ref: https://github.com/bitnami/bitnami-docker-keycloak#admin-credentials
    ##
    auth:
      ## @param auth.createAdminUser Create administrator user on boot
      ##
      createAdminUser: true
      ## @param auth.adminUser Keycloak administrator user
      ##
      adminUser: admin
      ## @param auth.existingSecret An already existing secret containing auth info
      ## e.g:
      ## existingSecret:
      ##   name: mySecret
      ##   keyMapping:
      ##     admin-password: myPasswordKey
      ##     management-password: myManagementPasswordKey
      ##     database-password: myDatabasePasswordKey
      ##     tls-keystore-password: myTlsKeystorePasswordKey
      ##     tls-truestore-password: myTlsTruestorePasswordKey
      ##
      existingSecret:
        name: keycloak-secrets
        keyMapping:
            admin-password: admin-password
            management-password: management-password
            database-password: database-password
            tls-keystore-password: tls-keystore-password
            tls-truestore-password: tls-truestore-password
      ## TLS encryption parameters
      ## ref: https://github.com/bitnami/bitnami-docker-keycloak#tls-encryption
      ##
      tls:
        ## @param auth.tls.enabled Enable TLS encryption
        ##
        enabled: false
        ## @param auth.tls.autoGenerated Generate automatically self-signed TLS certificates. Currently only supports PEM certificates
        ##
        autoGenerated: true
        resources:
          limits: {}
          requests: {}
    ## @param proxyAddressForwarding Enable Proxy Address Forwarding
    ## ref: https://www.keycloak.org/docs/latest/server_installation/#_setting-up-a-load-balancer-or-proxy
    ##
    proxyAddressForwarding: true
    ## Keycloak Service Discovery settings
    ## ref: https://github.com/bitnami/bitnami-docker-keycloak#cluster-configuration
    ##
    serviceDiscovery:
      ## @param serviceDiscovery.enabled Enable Service Discovery for Keycloak (required if `replicaCount` > `1`)
      ##
      enabled: true
      ## @param serviceDiscovery.protocol Sets the protocol that Keycloak nodes would use to discover new peers
      ## Available protocols can be found at http://www.jgroups.org/javadoc3/org/jgroups/protocols/
      ##
      protocol: kubernetes.KUBE_PING
      ## @param serviceDiscovery.properties Properties for the discovery protocol set in `serviceDiscovery.protocol` parameter
      ## List of key=>value pairs
      ## Example:
      ## properties:
      ##   - datasource_jndi_name=>"java:jboss/datasources/KeycloakDS"
      ##   - initialize_sql=>"CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
      ##
      properties: []
      ## @param serviceDiscovery.transportStack Transport stack for the discovery protocol set in `serviceDiscovery.protocol` parameter
      ##
      transportStack: tcp
    ## Keycloak cache settings
    ## ref: https://github.com/bitnami/bitnami-docker-keycloak#cluster-configuration
    ##
    cache:
      ## @param cache.ownersCount Number of nodes that will replicate cached data
      ##
      ownersCount: 1
      ## @param cache.authOwnersCount Number of nodes that will replicate cached authentication data
      ##
      authOwnersCount: 1
    ## @param configuration Keycloak Configuration. Auto-generated based on other parameters when not specified
    ## Specify content for standalone-ha.xml
    ## NOTE: This will override configuring Keycloak based on environment variables (including those set by the chart)
    ## The standalone-ha.xml is auto-generated based on other parameters when this parameter is not specified
    ##
    ## Example:
    ## configuration: |-
    ##    foo: bar
    ##    baz:
    ##
    configuration: ""
    ## @param existingConfigmap Name of existing ConfigMap with Keycloak configuration
    ## NOTE: When it's set the configuration parameter is ignored
    ##
    existingConfigmap: ""
    ## @param extraStartupArgs Extra default startup args
    ##
    extraStartupArgs: ""
    ## @param initdbScripts Dictionary of initdb scripts
    ## Specify dictionary of scripts to be run at first boot
    ## ref: https://github.com/bitnami/bitnami-docker-keycloak#initializing-a-new-instance
    ## Example:
    ## initdbScripts:
    ##   my_init_script.sh: |
    ##      #!/bin/bash
    ##      echo "Do something."
    ##
    initdbScripts: {}
    ## @param initdbScriptsConfigMap ConfigMap with the initdb scripts (Note: Overrides `initdbScripts`)
    ##
    initdbScriptsConfigMap: ""
    ## @param command Override default container command (useful when using custom images)
    ##
    command: []
    ## @param args Override default container args (useful when using custom images)
    ##
    args: []
    ## @param extraEnvVars Extra environment variables to be set on Keycloak container
    ## Example:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
    ##
    extraEnvVarsCM: ""
    ## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
    ##
    extraEnvVarsSecret: ""

    ## @section keycloak-config-cli parameters

    ## Configuration for keycloak-config-cli
    ## ref: https://github.com/adorsys/keycloak-config-cli
    ##
    keycloakConfigCli:
      ## @param keycloakConfigCli.enabled Whether to enable keycloak-config-cli
      ##
      enabled: true
      image:
        pullPolicy: Always
      annotations:
        helm.sh/hook: "post-install,post-upgrade,post-rollback"
        helm.sh/hook-delete-policy: "hook-succeeded,before-hook-creation"
        helm.sh/hook-weight: "5"
      resources:
        limits: {}
        requests: {}
      ## keycloak-config-cli containers' Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      ## @param keycloakConfigCli.containerSecurityContext.enabled Enabled keycloak-config-cli containers' Security Context
      ## @param keycloakConfigCli.containerSecurityContext.runAsUser Set keycloak-config-cli container's Security Context runAsUser
      ## @param keycloakConfigCli.containerSecurityContext.runAsNonRoot Set keycloak-config-cli container's Security Context runAsNonRoot
      ##
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
        runAsNonRoot: true
        allowPrivilegeEscalation: false
      ## keycloak-config-cli pods' Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      ## @param keycloakConfigCli.podSecurityContext.enabled Enabled keycloak-config-cli pods' Security Context
      ## @param keycloakConfigCli.podSecurityContext.fsGroup Set keycloak-config-cli pod's Security Context fsGroup
      ##
      podSecurityContext:
        enabled: true
        fsGroup: 1001
      ## @param keycloakConfigCli.backoffLimit Number of retries before considering a Job as failed
      ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-backoff-failure-policy
      ##
      backoffLimit: 1
      ## @param keycloakConfigCli.podLabels Pod extra labels
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
      ##
      podLabels: {}
      ## @param keycloakConfigCli.podAnnotations Annotations for job pod
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      podAnnotations: {}
      ## @param keycloakConfigCli.extraEnvVars Additional environment variables to set
      ## Example:
      ## extraEnvVars:
      ##   - name: FOO
      ##     value: "bar"
      ##
      extraEnvVars: []
      ## @param keycloakConfigCli.extraEnvVarsCM ConfigMap with extra environment variables
      ##
      extraEnvVarsCM: ""
      ## @param keycloakConfigCli.extraEnvVarsSecret Secret with extra environment variables
      ##
      extraEnvVarsSecret: ""
      ## @param keycloakConfigCli.extraVolumes Extra volumes to add to the job
      ##
      extraVolumes: []
      ## @param keycloakConfigCli.extraVolumeMounts Extra volume mounts to add to the container
      ##
      extraVolumeMounts: []
      ## @param keycloakConfigCli.configuration keycloak-config-cli realms configuration
      ## NOTE: nil keys will be considered files to import locally
      ## Example:
      ## configuration:
      ##   realm1.json: |
      ##     {
      ##       "realm": "realm1",
      ##       "clients": []
      ##     }
      ##   files/realm2.yaml:
      ##   realm3.yaml: |
      ##     realm: realm3
      ##     clients: []
      ##
      configuration: {}
      ## @param keycloakConfigCli.existingConfigmap ConfigMap with keycloak-config-cli configuration. This will override `keycloakConfigCli.config`
      ## NOTE: This will override keycloakConfigCli.configuration
      ##
      existingConfigmap: ""

    ## @section Keycloak deployment/statefulset parameters

    ## @param replicaCount Number of Keycloak replicas to deploy
    ##
    replicaCount: 1
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
      runAsNonRoot: true
      allowPrivilegeEscalation: false
    resources:
      limits: {}
      requests: {}

    ## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node affinity preset
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: ""
      ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param affinity Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ##
    affinity: {}
    ## @param nodeSelector Node labels for pod assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
    ## @param tolerations Tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param podLabels Extra labels for Keycloak pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param podAnnotations Annotations for Keycloak pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param priorityClassName Keycloak pods' priority.
    ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    ##
    priorityClassName: ""
    ## @param lifecycleHooks LifecycleHooks to set additional configuration at startup
    ##
    lifecycleHooks: {}
    ## @param extraVolumes Optionally specify extra list of additional volumes for Keycloak pods
    ##
    extraVolumes: []
    ## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for Keycloak container(s)
    ##
    extraVolumeMounts: []
    ## @param initContainers Add additional init containers to the Keycloak pods
    ## Example:
    ## initContainers:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    initContainers: []
    ## @param sidecars Add additional sidecar containers to the Keycloak pods
    ## Example:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []

    ## @section Exposure parameters

    ## Service configuration
    ##
    service:
      ## @param service.type Kubernetes service type
      ##
      type: ClusterIP
      ## @param service.port Service HTTP port
      ##
      port: 80
      ## @param service.httpsPort HTTPS Port
      ##
      httpsPort: 443
      ## @param service.nodePorts [object] Specify the nodePort values for the LoadBalancer and NodePort service types.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      nodePorts:
        http: ""
        https: ""
      ## @param service.clusterIP Keycloak service clusterIP IP
      ## e.g:
      ## clusterIP: None
      ##
      clusterIP: ""
      ## @param service.loadBalancerIP loadBalancerIP for the SuiteCRM Service (optional, cloud specific)
      ## ref: http://kubernetes.io/docs/user-guide/services/#type-loadbalancer
      ##
      loadBalancerIP: ""
      ## @param service.loadBalancerSourceRanges Address that are allowed when service is LoadBalancer
      ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## Example:
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param service.externalTrafficPolicy Enable client source IP preservation
      ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param service.annotations Annotations for Keycloak service
      ##
      annotations: {}
    ## Ingress configuration
    ##
    ingress:
      ## @param ingress.enabled Enable ingress controller resource
      ##
      enabled: true
      ## @param ingress.hostname Default host for the ingress resource
      ##
      hostname: keycloak.{SECRET_DOMAIN}
      ingressClassName: "traefik"
      path: /
      pathType: Prefix
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      tls:
        - hosts:
          - "keycloak.${SECRET_DOMAIN}"
          secretName: "keycloak-tls"
      servicePort: http
    ## Network Policy configuration
    ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
    ##
    networkPolicy:
      ## @param networkPolicy.enabled Enable the default NetworkPolicy policy
      ##
      enabled: false
      ## @param networkPolicy.allowExternal Don't require client label for connections
      ## The Policy model to apply. When set to false, only pods with the correct
      ## client label will have network access to the ports Keycloak is listening
      ## on. When true, Keycloak will accept connections from any source
      ## (with the correct destination port).
      ##
      allowExternal: true
      ## @param networkPolicy.additionalRules Additional NetworkPolicy rules
      ## Note that all rules are OR-ed.
      ## Example:
      ## additionalRules:
      ##   - matchLabels:
      ##       - role: frontend
      ##   - matchExpressions:
      ##       - key: role
      ##         operator: In
      ##         values:
      ##           - frontend
      ##
      additionalRules: {}

    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
      targetCPU: ""
      targetMemory: ""

    ## @section Metrics parameters

    ## Metrics configuration
    ##
    metrics:
      enabled: true
      service:
        port: 9990
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "{{ .Values.metrics.service.port }}"
      ## Prometheus Operator ServiceMonitor configuration
      ##
      serviceMonitor:
        ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using PrometheusOperator
        ##
        enabled: false
        ## @param metrics.serviceMonitor.namespace Namespace which Prometheus is running in
        ##
        namespace: ""
        ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped
        ##
        interval: 30s
        ## @param metrics.serviceMonitor.scrapeTimeout Specify the timeout after which the scrape is ended
        ## e.g:
        ##   scrapeTimeout: 30s
        ##
        scrapeTimeout: ""
        ## @param metrics.serviceMonitor.relabellings Specify Metric Relabellings to add to the scrape endpoint
        ##
        relabellings: []
        ## @param metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
        ##
        honorLabels: false
        ## @param metrics.serviceMonitor.additionalLabels Used to pass Labels that are required by the installed Prometheus Operator
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
        ##
        additionalLabels: {}
